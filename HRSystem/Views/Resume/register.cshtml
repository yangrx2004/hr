
@{
    Layout = null;
}
@using Model
@model Engage_resume
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet"
          href="../../../css/table.css" type="text/css">
    <link rel="stylesheet"
          href="../../../css/cwcalendar.css" type="text/css">
    <script type="text/javascript"
            src="../../../javascript/comm/comm.js">
    </script>
    <script type="text/javascript"
            src="../../../javascript/comm/list.js">
    </script>
    <script type="text/javascript"
            src="../../../javascript/calendar-ch.js">
    </script>
    <script src="~/javascript/jquery-3.6.1.min.js"></script>
    <script type="text/javascript"
            src="../../../javascript/jquery-1.7.2.js">
    </script>
    <script type="text/javascript"
            src="../../../javascript/locate.js">
    </script>
    <script type="text/javascript"
            src="../../../javascript/select.js">
    </script>
    <script type="text/javascript" src="../../javascript/jquery-1.7.2.js"></script>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <script type="text/javascript">
        window.onload = check;
        function tick() {
            var now = new Date();
            var hours, minutes, seconds, noon;
            var intHours, intMinutes, intSeconds;
            intHours = now.getHours();
            intMinutes = now.getMinutes();
            intSeconds = now.getSeconds();
            if (intHours < 24) {
                hours = intHours + ":";
                noon = "A.M.";
            } else {
                intHours = intHours - 24;
                hours = intHours + ":";
                noon = "P.M.";
            }
            if (intMinutes < 10) {
                minutes = "0" + intMinutes + ":";
            } else {
                minutes = intMinutes + ":";
            }
            if (intSeconds < 10) {
                seconds = "0" + intSeconds + " ";
            } else {
                seconds = intSeconds + " ";
            }
            timeString = hours + minutes + seconds;
            var now = new Date();
            document.getElementById("nowTime").value = now.getFullYear() + "-" + (now.getMonth() + 1) + "-" + now.getDate() + " " + timeString;
            window.setTimeout("tick();", 1000);
        }

        //load事件
        function check() {
            //获得系统当前时间的方法
            tick();
        }
    </script>
    <script type="text/javascript">

    </script>
</head>
<body>
    <div id="app">
    @using (Html.BeginForm("register", "Resume", FormMethod.Post))
    {
    <input type="hidden" name="engageResume.passCheckcomment" value="不通过" />
    <input type="hidden" name="engageResume.passPasscomment" value="不通过" />
    <input type="hidden" name="engageResume.checkStatus" value="false" />
    <table width="100%">
        <tr>
            <td>
                <font color="black">您正在做的业务是：人力资源--招聘管理--简历管理--简历登记 </font>

            </td>
        </tr>
        <tr>
            <td align="right">

                <input type="submit" value="提交" class="BUTTON_STYLE1">
                <input type="reset" value="清除" class="BUTTON_STYLE1">
            </td>
        </tr>
    </table>
    <table width="100%" border="1" cellpadding=0 cellspacing=1
           bordercolorlight=#848284 bordercolordark=#eeeeee
           class="TABLE_STYLE1">
        <tr>
            <td class="TD_STYLE1">
                职位分类
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Major_kind_name, ViewBag.List_Key1 as IEnumerable<SelectListItem>, new { @class = "SELECT_STYLE1" })
            </td>
            <td class="TD_STYLE1">
                职位名称
            </td>
            <td class="TD_STYLE2" width="20%">
                @Html.DropDownListFor(e => e.Major_name, ViewBag.List_Key2 as IEnumerable<SelectListItem>, new { @class = "SELECT_STYLE1" })
            </td>
            <td width="11%" class="TD_STYLE1">
                招聘类型
            </td>
            <td class="TD_STYLE2" colspan="2">
                @Html.DropDownListFor(e => e.Engage_type, new SelectList(new[] { new { value = "校园招聘", text = "校园招聘" }, new { value = "社会招聘", text = "社会招聘" } }, "value", "text", 0), new { @class = "SELECT_STYLE1" })

            </td>
            <td rowspan="6" style="text-align: center;">
                &nbsp;
                <el-upload class="avatar-uploader"
                           action="/Resume/WSC"
                           :show-file-list="false"
                           :on-success="handleAvatarSuccess"
                           :before-upload="beforeAvatarUpload">

                    <img v-if="imageUrl" :src="imageUrl" class="avatar" width="130" height="140">
                    <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                </el-upload>

            </td>
            <td colspan="7" class="TD_STYLE2" hidden>
                @Html.TextAreaFor(e => e.Human_picture, new { @class = "TEXTAREA_STYLE1", @rows = "4", @id = "tp" })
            </td>

        </tr>
        <tr>
            <td class="TD_STYLE1">
                姓名
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_name, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                性别
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_sex, new SelectList(new[] { new { value = "男", text = "男" }, new { value = "女", text = "女" } }, "value", "text", 0), new { @class = "SELECT_STYLE1" })

            </td>
            <td class="TD_STYLE1">
                EMAIL
            </td>
            <td colspan="2" class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_email, new { @class = "INPUT_STYLE2" })
            </td>
        </tr>
        <tr>
            <td class="TD_STYLE1">
                电话
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_telephone, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                家庭电话
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_homephone, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                手机
            </td>
            <td colspan="2" class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_mobilephone, new { @class = "INPUT_STYLE2" })
            </td>
        </tr>
        <tr>
            <td class="TD_STYLE1">
                住址
            </td>
            <td colspan="3" class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_address, new { @class = "INPUT_STYLE2" })
            </td>

            <td class="TD_STYLE1">
                邮编
            </td>
            <td colspan="2" class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_postcode, new { @class = "INPUT_STYLE2" })
            </td>
        </tr>

        <tr>
            <td class="TD_STYLE1">
                国籍
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_nationality, ViewBag.List_Key3 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>
            <td class="TD_STYLE1">
                出生地
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_birthplace, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                生日
            </td>
            <td width="13%" colspan="2" class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_birthday, new { @class = "INPUT_STYLE2", @Value = "" })
            </td>

        </tr>
        <tr>
            <td width="11%" class="TD_STYLE1">
                民族
            </td>
            <td class="TD_STYLE2" width="14%">
                @Html.DropDownListFor(e => e.Human_race, ViewBag.List_Key4 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>
            <td class="TD_STYLE1">
                宗教信仰
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_religion, ViewBag.List_Key5 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>
            <td class="TD_STYLE1">
                政治面貌
            </td>
            <td class="TD_STYLE2" colspan="2">
                @Html.DropDownListFor(e => e.Human_party, ViewBag.List_Key6 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>


        </tr>
        <tr>
            <td class="TD_STYLE1">
                身份证号码
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_idcard, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                年龄
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_age, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                毕业院校
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Human_college, new { @class = "INPUT_STYLE2" })
            </td>

            <td class="TD_STYLE1">
                学历
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_educated_degree, ViewBag.List_Key8 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>

        </tr>
        <tr>
            <td class="TD_STYLE1">
                教育年限
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_educated_years, ViewBag.List_Key7 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>
            <td class="TD_STYLE1">
                学历专业
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_educated_major, ViewBag.List_Key9 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })
            </td>

            <td class="TD_STYLE1">
                薪酬要求
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Demand_salary_standard, new { @class = "INPUT_STYLE2" })
            </td>
            <td class="TD_STYLE1">
                注册时间
            </td>
            <td class="TD_STYLE2">
                @Html.TextBoxFor(e => e.Regist_time, new { @class = "INPUT_STYLE2", id = "nowTime" })
            </td>

        </tr>
        <tr>

            <td class="TD_STYLE1">
                特长
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_specility, ViewBag.List_Key11 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })

            </td>
            <td class="TD_STYLE1">
                爱好
            </td>
            <td class="TD_STYLE2">
                @Html.DropDownListFor(e => e.Human_hobby, ViewBag.List_Key10 as IEnumerable<SelectListItem>, "请选择", new { @class = "SELECT_STYLE1" })

            </td>
            <td class="TD_STYLE1">
                &nbsp;
            </td>
            <td class="TD_STYLE2">
                &nbsp;
            </td>
            <td class="TD_STYLE1">
                &nbsp;
            </td>
            <td class="TD_STYLE2">
                &nbsp;
            </td>
        </tr>
        <tr>
            <td class="TD_STYLE1">
                个人履历
            </td>
            <td colspan="7" class="TD_STYLE2">
                @Html.TextAreaFor(e => e.Human_history_records, new { @class = "TEXTAREA_STYLE1" })
            </td>
        </tr>

        <tr>
            <td class="TD_STYLE1">
                备注
            </td>
            <td colspan="7" class="TD_STYLE2">
                @Html.TextAreaFor(e => e.Remark, new { @class = "TEXTAREA_STYLE1" })
            </td>
        </tr>
    </table>
    }
</div>
    <script>
        $(function () {
            $("#Major_kind_name").change(function () {

                var url = "/Position/major/?name=" + $("#Major_kind_name").val() + "";
                console.log(url);
                $.getJSON(url, function (data) {

                    $("#Major_name").html('')
                    $("#Major_name").append("<option value=''>请选择</option>");
                    $.each(data, function (i, item) {
                        $("#Major_name").append("<option value='" + item.Major_name + "'>" + item.Major_name + "</option>");
                    })
                });
            })
        })
    </script>
    <script type="text/javascript">
    var vue = new Vue({
        el: "#app",
        data: {
            imageUrl: '',
            tpUrl: ''
        },
        methods: {
            //上传方法全局文件
            handleAvatarSuccess(res, file) {//上传成功的钩子,获取后端的返回结果
                this.imageUrl = URL.createObjectURL(file.raw);//获取上传成功之后的图片路径
                this.tpUrl = res;
                $("#tp").val(res);
                console.log(res);


            },
            beforeAvatarUpload(file) {//文件上传前被调用,对文件进行验证
                const isJPG = file.type === 'image/jpeg';
                const isLt2M = file.size / 1024 / 1024 < 2;

                if (!isJPG) {
                    this.$message.error('上传头像图片只能是 JPG 格式!');
                }
                if (!isLt2M) {
                    this.$message.error('上传头像图片大小不能超过 2MB!');
                }
                return isJPG && isLt2M;
            },
            handlePreview(file) {

            },
            handleRemove(file, fileList) {
                //移除列表文件

                console.log(file);
                let index = this.fileNameList.index0f(file.name);
                console.log(index);
                this.fileNameList.splice(index, 1);
                console.log(" 删除后的", this.fileNameList);
            }


        }
        , mounted: function () {

        }
    })
</script>
</body>


</html>
