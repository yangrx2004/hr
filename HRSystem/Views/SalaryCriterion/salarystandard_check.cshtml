
@{
    Layout = null;
}
@using Model
@{ salary_standard ss = ViewBag.y; }
@{IEnumerable<salary_standard_details> ssd = ViewBag.s; }
@{IEnumerable<Users_XJ> user = ViewBag.u; }
@{ Users_XJ users = ViewBag.us; }
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-trasitional.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="../../css/table.css" type="text/css" />
    <title>无标题文档</title>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
</head>

<body>
    <div id="app">
        <form method="post" action="salarystandard_check_success.html">

            @*<input type="hidden" name="standard.ssdId" value="1259">*@

            <table width="100%">
                <tr>
                    <td>
                        <font color="#0000CC">您正在做的业务是:人力资源管理--薪酬标准管理--薪酬标准登记复核</font>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div align="right">
                            <input type="button" value="复核通过" class="BUTTON_STYLE1" v-on:click="check()">
                            <input type="button" value="返回" onclick="history.back();" class="BUTTON_STYLE1">
                        </div>
                    </td>
                </tr>
            </table>

            <table width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight='#848284' bordercolordark='#eeeeee'
                   class="TABLE_STYLE1">
                <tr>
                    <td width="12%" class="TD_STYLE1">
                        薪酬编号
                    </td>
                    <td width="15%" class="TD_STYLE2">
                        <input type="text" name="standard.standardId" value="" v-model="SSD.standard_id" />

                        @*<el-input name="standard.standardId"  v-model="SSD.standard_id" class="INPUT_STYLE2" readonly="readonly" ></el-input>*@
                    </td>
                    <td width="12%" class="TD_STYLE1">
                        薪酬标准名称
                    </td>
                    <td width="11%" class="TD_STYLE2">
                        <input type="text" name="standard.standardName" v-model="SSD.standard_name" id="standardName" value="薪酬标准3" class="INPUT_STYLE2">
                        @*<el-input name="standard.standardName" v-model="SSD.standard_name" id="standardName" class="INPUT_STYLE2" ></el-input>*@

                    </td>
                    <td width="11%" class="TD_STYLE1">
                        薪酬总额
                    </td>
                    <td width="17%" class="TD_STYLE2">
                        @*<el-input name="standard.salarySum" v-model="SSD.salary_sum" id="sumSalary" class="INPUT_STYLE2" value="0.0"></el-input>*@

                        <input type="text" name="standard.salarySum" v-model="SSD.salary_sum" value="0.0" id="sumSalary" class="INPUT_STYLE2">
                    </td>
                    <td width="12%" class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td width="10%" class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        制定人
                    </td>
                    <td class="TD_STYLE2">
                        <select v-model="SSD.designer">
                            <option value="">请选择制定人</option>
                            <option v-for="(item,index) in this.users" :value="item.u_true_name">{{item.u_true_name}}</option>
                        </select>
                        @*<el-select v-model="SSD.designer" placeholder="请选择制定人">
                            <el-option v-for="item in this.users"
                                       :label="item.u_true_name"
                                       :value="item.u_true_name">
                            </el-option>
                        </el-select>*@
                    </td>
                    <td class="TD_STYLE1">
                        复核人
                    </td>
                    <td class="TD_STYLE2">
                        @*<el-input name="standard.checker" v-model="SSD.checker"  class="INPUT_STYLE2" ></el-input>*@
                        <input type="text" name="standard.checker" v-model="SSD.checker" value="better_admin" class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        复核时间
                    </td>
                    <td class="TD_STYLE2">
                        @*<el-input name="standard.checkTime"id="Tdate" class="INPUT_STYLE2"></el-input>*@

                        <input type="text" name="standard.checkTime" id="Tdate" class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        是否通过复核
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @*<el-select v-model="SSD.check_status" placeholder="请选择">
                            <el-option value="1" label="通过"></el-option>
                            <el-option value="0" label="未通过"></el-option>
                        </el-select>*@
                        <select v-model="SSD.check_status">
                            <option value="">请选择</option>
                            <option value="1">通过</option>
                            <option value="0">未通过</option>
                        </select>
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        复核意见
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @*<el-input type="textarea"
                                  :rows="4"
                                  placeholder="请输入内容"
                                  name="standard.checkComment"
                                  class="TEXTAREA_STYLE1"
                                  v-model="SSD.check_comment">
                        </el-input>*@
                        <textarea name="standard.checkComment" v-model="SSD.check_comment" rows="4" class="INPUT_STYLE2"></textarea>

                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        序号
                    </td>
                    <td colspan="3" class="TD_STYLE1">
                        薪酬项目名称
                    </td>
                    <td colspan="4" class="TD_STYLE1">
                        金额
                    </td>
                </tr>

                <tr class="TD_STYLE2" v-for="(item,index) in this.list">
                    <td align="center">
                        <input type="hidden" name="details[0].sdtId" value="1260" />
                        <input type="hidden" name="details[0].itemId" :value="item.item_id" class="itemID" />
                        {{item.item_id}}
                    </td>
                    <td colspan="3">
                        <input type="hidden" name="details[0].standardId" value="1353320184280" />
                        <input type="hidden" name="details[0].standardName" value="薪酬标准3" />
                        <input type="hidden" name="details[0].itemName" value="出差补助" />
                        {{item.item_name}}
                    </td>
                    <td>
                        <input type="text" :id="['salary'+(index+1)]" :value="item.salary" name="details[0].salary"
                               v-on:keyup="countMoney('salary'+(index+1))" class="slea">

                    </td>
                    <td colspan="3">
                        &nbsp;
                    </td>
                </tr>
            </table>
        </form>

    </div>
    <script type="text/javascript">
        var cityOptions = [];
        var obj = [];
        var vm = new Vue({
            el: "#app",
            data: {
                list: [],
                checkAll: false,
                checkedCities: [],
                isIndeterminate: true,
                items: [],
                users:[],
                disap: false,
                show1: true,
                SSD: {
                    //[sdt_id], [standard_id], [standard_name], [item_id], [item_name], [salary][designer][register][remark]
                    sdt_id: 0,
                    standard_id: "",
                    standard_name: "",
                    item_id: 0,
                    item_name: "",
                    salary: 0,
                    designer: "",
                    checker: "",
                    remark: "",
                    salary_sum: 0,
                    count: 0,
                    check_comment: "",
                    check_status:"",
                }
            },
            methods: {
                fill: function () {
                    this.SSD.standard_id =@Html.Raw(Json.Encode(ss.standard_id));
                    this.SSD.standard_name =@Html.Raw(Json.Encode(ss.standard_name));
                    this.SSD.salary_sum =@Html.Raw(Json.Encode(ss.salary_sum));
                    this.SSD.designer =@Html.Raw(Json.Encode(ss.designer));
                    this.list =@Html.Raw(Json.Encode(ssd));
                    this.users =@Html.Raw(Json.Encode(user));
                    this.SSD.checker=@Html.Raw(Json.Encode(users.u_name));
                },
                countMoney(o) {
                    if (isNaN(document.getElementById(o).value) || document.getElementById(o).value < 0) {
                        alert("金额填写错误!");
                        document.getElementById(o).value = "0.00";
                        //return;
                    }
                    var sum = 0;
                    for (var i = 1; i <= this.list.length; i++) {
                        var salary = document.getElementById("salary" + i).value;
                        if (salary == "") {
                            salary = "0.00";
                        }
                        sum = Number(sum) + Number(salary);
                    }
                    document.getElementById("sumSalary").value = sum;
                },
                check() {
                    var nums = "";
                    var item_ID = "";
                   // var array = [];
                    var sum = document.getElementById("sumSalary").value

                    for (var i = 0; i < this.list.length; i++) {

                        var itemid = document.getElementsByClassName("itemID")[i].value
                        var salary = document.getElementsByClassName("slea")[i].value
                        if ((i+1) == this.list.length) {
                            nums += salary;
                            item_ID += itemid

                        } else {
                            nums += salary + ",";
                            item_ID += itemid+","
                        }
                    }
                    axios.post('/SalaryCriterion/SS_Update', {
                        standard_id: this.SSD.standard_id,
                        standard_name: this.SSD.standard_name,
                        salary:nums,
                        salary_sum: sum,
                        item_id: item_ID,
                        designer: this.SSD.designer,
                        checker: this.SSD.checker,
                        check_comment: this.SSD.check_comment,
                        count: this.list.length,
                        check_status: this.SSD.check_status
                    }, {
                    })
                        .then(res => {
                            console.log(res);
                            if (res.data > 0) {
                                alert("复核成功")
                                this.$message({
                                    message: "复核成功!",
                                    type: "success",
                                });
                                location.href = '/SalaryCriterion/salarystandard_check_list'

                            } else {
                                location.href = '/SalaryCriterion/salarystandard_check'

                            }

                            //res.data.forEach(function (item, index, array) {
                            //    cityOptions[index] = item.pbc_id;
                            //})
                        })
                        .catch(err => {
                            console.log(err);
                        })
                }



            },
            mounted: function () {
                this.fill();
            },

        })
    </script>
    <script type="text/javascript">
        function check() {
            var designer = document.getElementById("designer");
            var standardName = document.getElementById("standardName");
            if (designer.value.length <= 0) {
                alert("制定人不可为空!!!");
                return;
            }
            if (standardName.value.length <= 0) {
                alert("薪酬标准名称不可为空!!!");
                return;
            }
            document.forms[0].submit();
        }
        function countMoney(obj, o) {
            if (isNaN(document.getElementById(o).value) || document.getElementById(o).value < 0) {
                alert("金额填写错误!");
                document.getElementById(o).value = "0.00";
                return;
            }
            var sum = 0;
            for (var i = 1; i <= obj; i++) {
                var salary = document.getElementById("salary" + i).value;
                if (salary == "") {
                    salary = "0.00";
                }
                sum = Number(sum) + Number(salary);
            }
            document.getElementById("sumSalary").value = sum;
        }
        function time() {
            var tdate = document.getElementById("Tdate");
            var d = new Date();
            var y = d.getFullYear();
            var moth = d.getMonth() + 1;
            var date = d.getDate();
            var h = d.getHours();
            var m = d.getMinutes();
            var s = d.getSeconds();
            var hh = 20 - 1 - h;
            var mm = 60 - 1 - m;
            var ss = 60 - s;
            if (hh > 0) {
                mm = mm + 60 * hh;
            }
            if (moth < 10) {
                moth = "0" + moth;
            }
            if (date < 10) {
                date = "0" + date;
            }
            if (h < 10) {
                h = "0" + h;
            }
            if (m < 10) {
                m = "0" + m;
            }
            if (s < 10) {
                s = "0" + s;
            }
            if (mm < 10) {
                mm = "0" + mm;
            }
            if (ss < 10) {
                ss = "0" + ss;
            }

            tdate.value = y + "-" + moth + "-" + date + " " + h + ":" + m + ":" + s;

        }
        window.onload = time;
        var out = window.setInterval(time, 1000);
    </script>
</body>
</html>


