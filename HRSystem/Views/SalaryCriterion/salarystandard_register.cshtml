
@{
    Layout = null;
}
@using Model
@{IEnumerable<Users_XJ> user = ViewBag.y; }
@{ Users_XJ users = ViewBag.us; }
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-trasitional.dtd">
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="../../css/table.css" type="text/css" />
    <script type="text/javascript" src="../../javascript/comm/comm.js"></script>
    <script type="text/javascript" src="../../javascript/jquery-1.7.2.js"></script>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <title>无标题文档</title>
</head>
<body>
    <div id="app">
        <form method="post">
            <table width="100%">
                <tr>
                    <td>
                        <font color="black">
                            您正在做的业务是：人力资源--薪酬标准管理--薪酬标准登记
                        </font>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <input type="button" value="提 交" v-on:click="check()" class="BUTTON_STYLE1">
                        <input type="reset" value="返 回" v-on:click="fh()" class="BUTTON_STYLE1">
                    </td>
                </tr>
            </table>
            <table id="stable" width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight=#848284 bordercolordark=#eeeeee
                   class="TABLE_STYLE1">
                <tr>
                    <td width="74" class="TD_STYLE1">
                        薪酬标准编号
                    </td>
                    <td width="168" class="TD_STYLE2">
                        @*<el-input v-model="SSD.standard_id"  name="standard.standardId" readonly="readonly" class="INPUT_STYLE2"></el-input>*@
                        <input type="text" name="standard.standardId" v-model="SSD.standard_id" value="" readonly="readonly" class="INPUT_STYLE2">
                    </td>
                    <td width="83" class="TD_STYLE1">
                        薪酬标准名称
                    </td>
                    <td width="171" class="TD_STYLE2">
                        @*<el-input v-model="SSD.standard_name" name="standard.standardName" id="standardName"  class="INPUT_STYLE2"></el-input>*@

                        <input type="text" name="standard.standardName" v-model="SSD.standard_name" id="standardName" class="INPUT_STYLE2">
                    </td>
                    <td width="170" class="TD_STYLE1">
                        薪酬总额
                    </td>
                    <td width="138" class="TD_STYLE2">
                        @*<el-input  name="standard.salarySum" id="sumSalary" class="INPUT_STYLE2" readonly="readonly" value="0.0"></el-input>*@

                        <input type="text" name="standard.salarySum" id="sumSalary" value="0.0" readonly class="INPUT_STYLE2" />
                    </td>
                    <td width="103" class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td width="95" height="26" class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        制定人
                    </td>
                    <td class="TD_STYLE2">
                        <select v-model="SSD.designer">
                            <option value="">请选择制定人</option>
                            <option v-for="(item,index) in this.users" :value="item.u_true_name">{{item.u_true_name}}</option>
                        </select>
                        @*<el-select v-model="SSD.designer" placeholder="请选择制定人">
                            <el-option v-for="item in this.users"                
                                       :label="item.u_true_name"
                                       :value="item.u_true_name">
                            </el-option>
                        </el-select>*@
                    </td>
                    <td class="TD_STYLE1">
                        登记人
                    </td>
                    <td class="TD_STYLE2">
                        @*@ViewBag.s.u_name*@
                        @*:v-model="SSD.register"*@
                        <input type="text" id="be_name" v-model="SSD.register" name="standard.register" readonly="readonly" class="INPUT_STYLE2">
                        @*<el-input name="standard.register" id="be_name" class="INPUT_STYLE2" readonly="readonly" v-model="SSD.register"></el-input>*@

                    </td>
                    <td class="TD_STYLE1">
                        登记时间
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" id="Tdate" name="standard.registTime" readonly="readonly" class="INPUT_STYLE2">
                        @*<el-input name="standard.registTime" id="Tdate" class="INPUT_STYLE2" readonly="readonly"></el-input>*@

                    </td>
                    <td class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        备注
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        @*<el-input type="textarea"
                                  :rows="4"
                                  placeholder="请输入内容"
                                  name="standard.remark"
                                  class="TEXTAREA_STYLE1"
                                  v-model="SSD.remark">
                        </el-input>*@
                        <textarea name="standard.remark" rows="4" class="TEXTAREA_STYLE1" v-model="SSD.remark"></textarea>
                    </td>
                </tr>
                <tr v-show="show1">
                    <td colspan="7" class="TD_STYLE2">
                        <template>
                            <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" v-on:change="handleCheckAllChange">全选</el-checkbox>
                            <input type="button" value="请选择薪酬组成" style="margin-left: 26px" v-on:click="btn_qd()" />
                            <div style="margin: 15px 0;"></div>
                            <el-checkbox-group v-model="checkedCities" v-on:change="handleCheckedCitiesChange">
                                <el-checkbox v-for="city in list" :label="city" :value="city.pbc_id" :key="city.pbc_id">{{city.attribute_name}}</el-checkbox>
                            </el-checkbox-group>
                        </template>
                    </td>
                </tr>
                <tbody v-show="disap">
                    <tr class="TD_STYLE1">
                        <td align="center">
                            序号
                        </td>
                        <td colspan="3">
                            薪酬项目名称
                        </td>
                        <td>
                            金额
                        </td>
                        <td colspan="3">
                            &nbsp;
                        </td>
                    </tr>
                    <tr class="TD_STYLE2" v-for="(item,index) in this.items">
                        <td align="center">
                            {{item.pbc_id}}
                            <input type="hidden" name="details[0].itemId" :value="item.pbc_id">
                        </td>
                        <td colspan="3">
                            {{item.attribute_name}}
                            <input type="hidden" id="details1" name="details[0].itemName" :value="item.attribute_name">
                        </td>
                        <td>
                            <input type="text" :id="['salary'+(index+1)]" value="0.00" name="details[0].salary"
                                   v-on:keyup="countMoney('salary'+(index+1))" class="slea">
                        </td>
                        <td colspan="3">
                            &nbsp;
                        </td>
                    </tr>

                </tbody>
            </table>
            <p>
                &nbsp;
            </p>
        </form>
    </div>
    <script type="text/javascript">
        var cityOptions = [];
        var obj = [];
        var vm = new Vue({
            el: "#app",
            data: {
                list: [],
                checkAll: false,
                checkedCities: [],
                isIndeterminate: true,
                items: [],
                users:[],
                disap: false,
                show1: true,
                SSD: {
                    //[sdt_id], [standard_id], [standard_name], [item_id], [item_name], [salary][designer][register][remark]
                    sdt_id: 0,
                    standard_id: "",
                    standard_name: "",
                    item_id: 0,
                    item_name: "",
                    salary: [],
                    designer: "",
                    register: "",
                    remark: "",
                    salary_sum: 0,
                    count: 0

                }
            },
            methods: {
                fill: function () {
                    axios.get('/Client/SMS_Show', {
                    })
                        .then(res => {
                            console.log(res.data);
                            this.SSD.register =@Html.Raw(Json.Encode(users.u_name));
                            this.list = res.data;
                            this.users=@Html.Raw(Json.Encode(user));
                            //res.data.forEach(function (item, index, array) {
                            //    cityOptions[index] = item.pbc_id;
                            //})
                            var num = Math.floor((Math.random() * 9999) + 1000).toString();
                            var date = new Date();
                            //年
                            var year = date.getFullYear().toString();
                            //月
                            var month = (date.getMonth() + 1).toString();
                            //日
                            var strDate = date.getDate().toString();
                            //时
                            var hour = date.getHours().toString();
                            //分
                            var minute = date.getMinutes().toString();
                            //秒
                            var second = date.getSeconds().toString();
                            //随机编号
                            var nums = "11" + year + month + strDate + hour + minute + second + num
                            this.SSD.standard_id = nums;
                        })
                        .catch(err => {
                            console.log(err);
                        })
                },
                //点击全选
                handleCheckAllChange(val) {
                    //console.log(val+"all");
                    this.checkedCities = val ? this.list : [];
                    this.isIndeterminate = false;
                },
                handleCheckedCitiesChange(value) {
                    let checkedCount = value.length;
                    this.checkAll = checkedCount === this.list.length;
                    this.isIndeterminate = checkedCount > 0 && checkedCount < this.list.length;
                },
                btn_qd() {
                    var t = this;
                    this.disap = true;
                    this.items = this.checkedCities;
                    obj = this.checkedCities;
                    this.show1 = false;
                },
                //返回
                fh() {
                    this.show1 = true;
                    this.disap = false;
                    this.checkedCities = [];
                },
                countMoney(o) {
                    if (isNaN(document.getElementById(o).value) || document.getElementById(o).value < 0) {
                        alert("金额填写错误!");
                        document.getElementById(o).value = "0.00";
                        //return;
                    }
                    var sum = 0;
                    for (var i = 1; i <= obj.length; i++) {
                        var salary = document.getElementById("salary" + i).value;
                        if (salary == "") {
                            salary = "0.00";
                        }
                        sum = Number(sum) + Number(salary);
                    }
                    document.getElementById("sumSalary").value = sum;
                },
                //提交
                check() {
                    console.log();
                    var array = [];
                    var sum = document.getElementById("sumSalary").value
                    var registre = document.getElementById("be_name").value;
                    this.checkedCities.forEach(function (item, index) {
                        var salary = document.getElementsByClassName("slea")[index].value
                        array.push(salary)
                    })
                    this.SSD.salary = array;


                    axios.post('/SalaryCriterion/SSD_Add', {
                        standard_id: this.SSD.standard_id,
                        standard_name: this.SSD.standard_name,
                        salary: this.SSD.salary,
                        designer: this.SSD.designer,
                        register: registre,
                        salary_sum: sum,
                        remark: this.SSD.remark,
                        count: this.checkedCities,
                    }, {
                    })
                        .then(res => {
                            console.log(res);
                            if (res.data > 0) {
                                alert("添加成功")
                                this.$message({
                                    message: "添加成功!",
                                    type: "success",
                                });
                                location.href = '/SalaryCriterion/salarystandard_check_list'

                            } else {
                                location.href = '/SalaryCriterion/salarystandard_register'

                            }

                            //res.data.forEach(function (item, index, array) {
                            //    cityOptions[index] = item.pbc_id;
                            //})
                        })
                        .catch(err => {
                            console.log(err);
                        })
                }


            },
            mounted: function () {
                this.fill();
            },
            //时间格式
            //filters: {
            //    ftime: function (value, spe) {
            //        if (value == '/Date(-62135596800000)/') {
            //            return '空'
            //        }
            //        var dt = new Date(parseInt(value.replace("/Date(", "").replace(")/", ""), 10));
            //        return dt.getFullYear() + "-" + (dt.getMonth() + 1) + "-" + dt.getDate();
            //    }
            //},
        })
    </script>
    <script type="text/javascript">
        function check() {
            //string name = DateTime.Now.ToString("yyyyMMddHHmmssfff");
            //num = (int)(Math.random() * 999) + 100;
            var designer = document.getElementById("designer");
            var standardName = document.getElementById("standardName");
            if (designer.value.length <= 0) {
                alert("制定人不可为空!!!");
                return;
            }
            if (standardName.value.length <= 0) {
                alert("薪酬标准名称不可为空!!!");
                return;
            }
            document.forms[0].submit();
        }
        var x = 1

        function time() {
            var tdate = document.getElementById("Tdate");
            var d = new Date();
            var y = d.getFullYear();
            var moth = d.getMonth() + 1;
            var date = d.getDate();
            var h = d.getHours();
            var m = d.getMinutes();
            var s = d.getSeconds();
            var hh = 20 - 1 - h;
            var mm = 60 - 1 - m;
            var ss = 60 - s;
            if (hh > 0) {
                mm = mm + 60 * hh;
            }
            if (moth < 10) {
                moth = "0" + moth;
            }
            if (date < 10) {
                date = "0" + date;
            }
            if (h < 10) {
                h = "0" + h;
            }
            if (m < 10) {
                m = "0" + m;
            }
            if (s < 10) {
                s = "0" + s;
            }
            if (mm < 10) {
                mm = "0" + mm;
            }
            if (ss < 10) {
                ss = "0" + ss;
            }

            tdate.value = y + "-" + moth + "-" + date + " " + h + ":" + m + ":" + s;

        }
        window.onload = time;
        var out = window.setInterval(time, 1000);
    </script>

</body>
</html>
